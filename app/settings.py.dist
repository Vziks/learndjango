"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os




# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'sbzjoqo$=78^wx6fbml9e2s3ixskab44+6rz!@ccd4&szey*i='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

ALLOWED_HOSTS = []
# ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'home',
    'article.apps.ArticleConfig',
    'api.apps.ApiConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_swagger',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'app.middleware.HeaderMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.IsAuthenticated',
    ],
    'PAGE_SIZE': 10
}
#
# TEMPLATE_LOADERS = [
#     'django.template.loaders.filesystem.Loader',
#     'django.template.loaders.app_directories.Loader',
# ]

ROOT_URLCONF = 'app.urls'

SETTINGS_PATH = os.path.dirname(os.path.dirname(__file__))

# print(SETTINGS_PATH)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(SETTINGS_PATH, 'templates'),
            # '/home/anton/PycharmProjects/learndjango/app/templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

LOGIN_REDIRECT_URL = '/'

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
#}

#sudo yum install mysql-devel
#sudo yum install python-devel
#pip install mysql-python

#python manage.py migrate

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'dj',
        'USER': 'root',
        'PASSWORD': '123'
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/




# LANGUAGE_CODE = 'ru-RU'
# LANGUAGE_CODE = 'ru-RU'

DEFAULT_CHARSET = 'utf-8'
USE_I18N = True
TIME_ZONE = 'Europe/Moscow'
USE_L10N = True
USE_TZ = True
#
#
#
# LANGUAGES = (
#     ('en', ugettext('English')),
#     ('ru', ugettext('Russian')),
# )

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

PROJECT_DIR = '/home/user/prodhub/django/'

STATIC_URL = '/static/'

# Dump all static file here to this folder
# deploy command
# python manage.py collectstatic
STATIC_ROOT = '/home/user/prodhub/django/app/static'


BASE_DIR = os.path.realpath(os.path.dirname(__file__))

_PATH = os.path.realpath(os.path.dirname(__file__))
MEDIA_ROOT = os.path.join(PROJECT_DIR, 'uploads/media')
MEDIA_URL = '/uploads/media/'

#
STATICFILES_DIRS = [
    #collect all file form folders python manage.py collectstatic
    os.path.join(BASE_DIR, "static"),
]

LANGUAGE_CODE = 'ru'

ugettext = lambda s: s

LANGUAGES = (
  ('ru', ugettext('Russian')),
)

PROJECT_ROOT = os.path.realpath(os.path.dirname(__file__))

# PROJECT_ROOT

print(PROJECT_ROOT)
print(BASE_DIR)

LOCALE_PATHS = (os.path.join(BASE_DIR, '../locale'), )

